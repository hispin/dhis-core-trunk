package require tcltest
namespace import ::tcltest::*

lappend auto_path datamart.vfs/libext
lappend auto_path datamart.vfs/libdhis

package require dhisdb
package require vfs::zip

source datamart.vfs/transform.tcl

proc xsltsetup {} {
   set mntfile [vfs::zip::Mount Export_meta.zip Export_meta.zip]
    file copy -force Export_meta.zip/Export.xml ./Export.xml
    vfs::zip::Unmount $mntfile Export_meta.zip
    set xsltdir datamart.vfs/xslt
    file copy -force $xsltdir/dxf2sql.xsl dxf2sql.xsl  
    set ::data ""
}

proc xsltcleanup {} {
    file delete Export.xml
    file delete dxf2sql.xsl
}

proc ::testHandler {datard userdata} {
    fconfigure $datard -blocking 1
    set ::data [read $datard]
    close $datard
}

if {0} {
    test transform "Transforming dxf 2 sql" \
	-constraints { longtests } \
	-body {
	    puts "patience .. could take a minute or so"
	    transform::transform dxf2sql.xsl Export.xml "test" ::testHandler
	    vwait ::data
	    return  [expr [string length $::data]/1000]
	} -setup { xsltsetup } -cleanup { xsltcleanup } \
	-result 2342 ; # number of chars in resulting sql 
}

set source "<test><name>Bob</name></test>"

set xslt "
<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>
  <xsl:output method='text'/>
  <xsl:template match='/'>
     <xsl:text>Hello </xsl:text><xsl:value-of select='/test/name'/>
  </xsl:template>
</xsl:stylesheet>"

proc simplesetup {} {
    set f [open test.xml w+]; puts $f $::source; close $f
    set f [open test.xsl w+]; puts $f $::xslt; close $f
    set ::data ""
}

proc simplecleanup {} {
    file delete -force test.xml
    file delete -force test.xsl
}

test shorttransform "Basic xslt processing" -body {
    transform::transform test.xsl test.xml "test" ::testHandler
    vwait ::data
    return $::data
} -setup {simplesetup} -cleanup {simplecleanup} \
    -result "Hello Bob"

