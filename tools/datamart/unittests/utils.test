package require tcltest
namespace import ::tcltest::*

namespace eval starkit {}
set starkit::topdir mydatamart.vfs	

lappend auto_path [file join $starkit::topdir libext]
lappend auto_path [file join $starkit::topdir libdhis]

source mydatamart.vfs/appinit.tcl
source mydatamart.vfs/utils.tcl

test dxf2tmp "Testing dxf export.zip file" -body {
     dxf2tmp "unittests/Export_meta.zip"
    file exists [file join $::dhis(tmpdir) Export.xml]
} -result 1 -cleanup {
  file delete -force unittests/Export.xml
}

test transform "Testing transfrom" -body {
    puts "transforming $testfilename with $xsltfilename" 
    transform $xsltfilename $testfilename $outfilename
    set of [open $outfilename]
    set res [read $of]
    close $of
    set res
} -setup {
    set source "<test><name>Bob</name></test>"

    set xslt {<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>
  <xsl:output method='text'/>
  <xsl:template match='/'>
     <xsl:text>Hello </xsl:text><xsl:value-of select='/test/name'/>
  </xsl:template>
	</xsl:stylesheet>}
    
    set xsltfilename [file join $::dhis(tmpdir) test.xsl] 
    set testfilename [file join $::dhis(tmpdir) test.xml]
    set outfilename [file join $::dhis(tmpdir) out.xml]
    set xsltfile [open $xsltfilename w+]
    set testfile [open $testfilename w+]
    puts $xsltfile $xslt; close $xsltfile
    puts $testfile $source; close $testfile
} -cleanup {
    #file delete -force $xsltfilename $testfilename $outfilename 
} -result "Hello Bob"

test transform "Testing transfrom with param" -body {
    puts "transforming $testfilename with $xsltfilename" 
    transform $xsltfilename $testfilename $outfilename {testparam paramValue}
} -setup {
    set source "<test><name>Bob</name></test>"

    set xslt {<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>
  <xsl:output method='text'/>
  <xsl:param name='testparam'/>
  <xsl:template match='/'>
     <xsl:text>Hello </xsl:text><xsl:value-of select='/test/name'/>
     <xsl:message>Hello <xsl:value-of select='$testparam'/></xsl:message>
  </xsl:template>
	</xsl:stylesheet>}
    
    set xsltfilename [file join $::dhis(tmpdir) test.xsl] 
    set testfilename [file join $::dhis(tmpdir) test.xml]
    set outfilename [file join $::dhis(tmpdir) out.xml]
    set xsltfile [open $xsltfilename w+]
    set testfile [open $testfilename w+]
    puts $xsltfile $xslt; close $xsltfile
    puts $testfile $source; close $testfile
} -cleanup {
    #file delete -force $xsltfilename $testfilename $outfilename 
} -result "Hello paramValue"

test import "Testing dxf import" -body {
    sqlite3 db test.dmart
    importDXF db unittests/Export_meta.zip
}