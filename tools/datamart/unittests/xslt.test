package require tcltest
namespace import ::tcltest::*

lappend auto_path mydatamart.vfs/libext
lappend auto_path mydatamart.vfs/libdhis

package require xslt

${::xslt::log}::setlevel debug

${::xslt::log}::debug "Hello from the logger"

set ::dhis(dbfile) utest.dmart
set xsltproc [file normalize mydatamart.vfs/resource/extbin/xsltproc.exe]

file mkdir "temp_test"

test init "Initializing" -body {
    xslt::init $xsltproc
    set res 1
} -result 1

test simpletransform "Simple transform" -body {
    xslt::transform unittests/test.xsl unittests/test.xml unittests/out.txt
    set res [read [open unittests/out.txt]]
} -result Bob

test xsltparams "transform with params" -body {
    xslt::transform unittests/test.xsl unittests/test.xml unittests/out.txt {alternativename Fred}
    set res [read [open unittests/out.txt]]
} -result Fred

proc callback {fd outfile} {
    set res [gets $fd]
    # puts "Output: $res"
    if {[eof $fd]} {
	close $fd
	set ::done done
    }
}

test transform_asynch "Simple asynch transform" -body {
    set ::done notdone
    xslt::transform_asynch unittests/test.xsl unittests/test.xml unittests/out.txt callback
    vwait ::done
    set res [read [open unittests/out.txt]]
} -result Bob

test xsltparams_asynch "transform with params" -body {
    xslt::transform_asynch unittests/test.xsl unittests/test.xml unittests/out.txt callback {alternativename Fred}
    vwait ::done
    set res [read [open unittests/out.txt]]
} -result Fred


cleanupTests


