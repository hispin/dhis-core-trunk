package require tcltest
namespace import ::tcltest::*

lappend auto_path datamart.vfs/libext
lappend auto_path datamart.vfs/libdhis

package require dhisweb

${::dhisweb::log}::setlevel debug

${::dhisweb::log}::debug "Hello from the logger"

set ::dhis(dbfile) utest.dmart

set testhost http://hiskenya.org
#set testhost http://192.168.1.11:8082
#set testhost http://127.0.0.1:8082
#set testhost https://dhis.uio.no/dev

set username bobjolliffe
set password Bob12345

proc ::handler {text} {
    puts "$text" 
}	

test string2line1 "string to line converter 1" -body {
    set prefix "12"
    set teststr "3\n123\n123\n1"
    ::dhisweb::string2line teststr $prefix ::handler
} -result "3 1"

test string2line2 "string to line converter 2" -body {
    set prefix "12"
    set teststr "3\n123\n123\n"
    ::dhisweb::string2line teststr $prefix ::handler
} -result "3 {}"

test string2line "string to line converter 1" -body {
    set prefix "12"
    set teststr "3456"
    ::dhisweb::string2line teststr $prefix ::handler
} -result "0 123456"


if {0} {
test badhost "Testing unresolvable hostname" -body {
    puts "$::dhisweb::loginstatus"
    after 500 {
	try {
	    dhisweb::login http://junk.bob admin district 5000
	} on error err {
	    puts "test login: $err"
	} finally {}
    }
    vwait ::dhisweb::loginstatus 
    return $::dhisweb::loginstatus
} -result BADHOST -cleanup {    
    set $::dhisweb::loginstatus IDLE
}

test logintimeout "Testing timeout" -body {
    dhisweb::login $testhost/demo admi district 1
    vwait ::dhisweb::loginstatus
    return $dhisweb::loginstatus
} -result TIMEOUT -cleanup {
    set $::dhisweb::loginstatus IDLE
}

test loginfail "Testing bad login" -body {
    dhisweb::login $testhost/demo admin badpassword 10000
    vwait ::dhisweb::loginstatus
    return $dhisweb::loginstatus
} -result LFAILED -cleanup {
    set $::dhisweb::loginstatus IDLE
}


test loginrequired "Fetching datavalues without logging in" -body {
    after {1000} {
	try {
	    set tok [dhisweb::fetchDataValues $testhost 2 18 monthly 20100101 20100131 5000]
	} on error err {
	    puts "ouch $err"
	}
    }
    puts $::dhisweb::datavaluestatus
    vwait ::dhisweb::datavaluestatus
    #puts [getCookies $tok]
    #::http::cleanup tok
    return $::dhisweb::datavaluestatus
} -result LOGINREQ -cleanup {
    set ::dhisweb::datavaluestatus IDLE
} -setup {
    set ::dhisweb::datavaluestatus IDLE
}

after 1000

test login "Testing good login" -body {
    after 500 {
	dhisweb::login $::testhost admin district 5000
	vwait ::dhisweb::loginstatus
	try {
	    set tok [dhisweb::fetchDataValues $testhost 2 18 monthly 20090101 20100131 5000]
	} on error err {
	    puts "ouch $err"
	}
    }
    
    puts $::dhisweb::datavaluestatus
    vwait ::dhisweb::datavaluestatus
    return $::dhisweb::loginstatus
} -result LSUCCESS -cleanup {
    set $::dhisweb::loginstatus IDLE
}

after 1000


set ::dhisweb::loginCookie "Bob=stupid"


test fetchdata "Fetching datavalues with logging in" -body {
    after 500 {
	dhisweb::login $::testhost admin district 5000
	vwait ::dhisweb::loginstatus
	try {
	    set tok [dhisweb::fetchDataValues $testhost 2 18 monthly 20090101 20100131]
	} on error err {
	    puts "ouch $err"
	}
    }
    
    puts $::dhisweb::datavaluestatus
    while {$::dhisweb::datavaluestatus != "DONE"} {
	vwait ::dhisweb::datavaluestatus
	puts $::dhisweb::datavaluestatus
    }
    return $::dhisweb::datavaluestatus
} -result DONE -cleanup {
    set ::dhisweb::datavaluestatus IDLE
} -setup {
    set ::dhisweb::datavaluestatus IDLE
}

test fetchindicators "Fetching indicatorvalues with logging in" -body {
    after 500 {
	#dhisweb::login $::testhost admin district 5000
	#vwait ::dhisweb::loginstatus
	try {
	    set tok [dhisweb::fetchIndicatorValues $testhost 2 18 monthly 20090101 20100131]
	} on error err {
	    puts "ouch $err"
	}
    }
    
    puts $::dhisweb::indicatorstatus
    while {$::dhisweb::indicatorstatus != "DONE"} {
	vwait ::dhisweb::indicatorstatus
	puts $::dhisweb::indicatorstatus
    }
    return $::dhisweb::indicatorstatus
} -result DONE -cleanup {
    set ::dhisweb::indicatorstatus IDLE
} -setup {
    set ::dhisweb::indicatorstatus IDLE
}

}; # if 0

test bothtogether "Fetch datavalues and indicators in parallel" -body {
    after 500 {
	
	catch {sqlite3 dataconn $::dhis(dbfile)} err
	puts $err
	
	dataconn eval "BEGIN TRANSACTION"

	try {
	    dhisweb::login $::testhost $username $password 5000
	    vwait ::dhisweb::loginstatus
	    puts "login status: $::dhisweb::loginstatus"

	    # make a db connection	    
	    set tokd [dhisweb::fetchDataValues $testhost 3 18 monthly 20090101 20100131]
	    set toki [dhisweb::fetchIndicatorValues $testhost 3 18 monthly 20090101 20100131]
	} on error err {
	    puts "ouch $err"
	} finally {}
    }
    
    # assumption indicators will finish first ....
    while {$::dhisweb::indicatorstatus != "DONE"} {
	vwait ::dhisweb::indicatorstatus
	puts "indicator status $::dhisweb::indicatorstatus; datavalue status $::dhisweb::datavaluestatus"
    }
    while {$::dhisweb::datavaluestatus != "DONE"} {
	vwait ::dhisweb::datavaluestatus
	puts "indicator status $::dhisweb::indicatorstatus; datavalue status $::dhisweb::datavaluestatus"
    }

    dataconn eval "COMMIT TRANSACTION"
    dataconn close

    return [list $::dhisweb::indicatorstatus $::dhisweb::indicatorstatus]
} -result {DONE DONE} -cleanup {
    set ::dhisweb::datavaluestatus IDLE
    set ::dhisweb::indicatorstatus IDLE
} -setup {
    set ::dhisweb::indicatorstatus IDLE
    set ::dhisweb::datavaluestatus IDLE
}

