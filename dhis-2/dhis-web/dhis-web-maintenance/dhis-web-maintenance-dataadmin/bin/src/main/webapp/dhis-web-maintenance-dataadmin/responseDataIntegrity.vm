#macro( violation $name $list )
#set( $size = $list.size() )
"${name}": [
#foreach( $o in $list )
"${o.name}"#if( $velocityCount < $size ),#end
#end
]
#end

#macro( violationWithCollection $name $list )
#set( $listSize = $list.size() )
"${name}": [
#foreach( $o in $list )
#set( $oSize = $o.size() )
"#foreach( $p in $o ) ${p.name} #if( $velocityCount < $oSize ), #end
#end "#if( $velocityCount < $listSize ),#end
#end
]
#end

#macro( violationWithMap $name $map )
#set( $size = $map.keySet().size() )
"${name}": [
#foreach( $o in $map.keySet() )
"${o.name}: $map.get( $o )"#if( $velocityCount < $size ),#end
#end
]
#end

#macro( violationWithMapList $name $map )
#set( $mapSize = $map.keySet().size() )
"${name}": [
#foreach( $o in $map.keySet() )
#set( $listSize = $map.get( $o ).size() )
"${o.name}:#foreach( $p in $map.get( $o ) ) ${p.name}#if( $velocityCount < $listSize ), #end
#end "#if( $velocityCount < $mapSize ),#end
#end
]
#end
{
    #violation( "dataElementsWithoutDataSet" $dataElementsWithoutDataSet ),
    #violation( "dataElementsWithoutGroups" $dataElementsWithoutGroups ),    
    #violation( "dataElementsViolatingCompulsoryGroupSets" $dataElementsViolatingCompulsoryGroupSets ),    
    #violation( "dataElementsViolatingExclusiveGroupSets" $dataElementsViolatingExclusiveGroupSets ),    
    #violationWithMapList( "dataElementsAssignedToDataSetsWithDifferentPeriodTypes" $dataElementsAssignedToDataSetsWithDifferentPeriodTypes ),    
    #violation( "dataSetsNotAssignedToOrganisationUnits" $dataSetsNotAssignedToOrganisationUnits ),
    #violationWithCollection( "indicatorsWithIdenticalFormulas" $indicatorsWithIdenticalFormulas ),
    #violation( "indicatorsWithoutGroups" $indicatorsWithoutGroups ),    
    #violationWithMap( "invalidIndicatorNumerators" $invalidIndicatorNumerators ),
    #violationWithMap( "invalidIndicatorDenominators" $invalidIndicatorDenominators ),        
    #violation( "indicatorsViolatingCompulsoryGroupSets" $indicatorsViolatingCompulsoryGroupSets ),        
    #violation( "indicatorsViolatingExclusiveGroupSets" $indicatorsViolatingExclusiveGroupSets ),        
    #violation( "organisationUnitsWithCyclicReferences" $organisationUnitsWithCyclicReferences ),
    #violation( "orphanedOrganisationUnits" $orphanedOrganisationUnits ),
    #violation( "organisationUnitsWithoutGroups" $organisationUnitsWithoutGroups ),
    #violation( "organisationUnitsViolatingCompulsoryGroupSets" $organisationUnitsViolatingCompulsoryGroupSets ),
    #violation( "organisationUnitsViolatingExclusiveGroupSets" $organisationUnitsViolatingExclusiveGroupSets ),
    #violation( "organisationUnitGroupsWithoutGroupSets" $organisationUnitGroupsWithoutGroupSets ),
    #violation( "validationRulesWithoutGroups" $validationRulesWithoutGroups ),    
    #violationWithMap( "invalidValidationRuleLeftSideExpressions" $invalidValidationRuleLeftSideExpressions ),
    #violationWithMap( "invalidValidationRuleRightSideExpressions" $invalidValidationRuleRightSideExpressions )
}