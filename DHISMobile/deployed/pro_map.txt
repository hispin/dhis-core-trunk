com.jcraft.jzlib.Adler32 -> a:
    long adler32(long,byte[],int,int) -> a
com.jcraft.jzlib.FilterInputStream -> b:
    java.io.InputStream in -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
com.jcraft.jzlib.InfBlocks -> c:
    int[] inflate_mask -> g
    int[] border -> h
    int mode -> i
    int left -> j
    int table -> k
    int index -> l
    int[] blens -> m
    int[] bb -> n
    int[] tb -> o
    com.jcraft.jzlib.InfCodes codes -> p
    int last -> q
    int bitk -> a
    int bitb -> b
    int[] hufts -> r
    byte[] window -> c
    int end -> d
    int read -> e
    int write -> f
    java.lang.Object checkfn -> s
    long check -> t
    com.jcraft.jzlib.InfTree inftree -> u
    void reset(com.jcraft.jzlib.ZStream,long[]) -> a
    int proc(com.jcraft.jzlib.ZStream,int) -> a
    void free(com.jcraft.jzlib.ZStream) -> a
    int inflate_flush(com.jcraft.jzlib.ZStream,int) -> b
com.jcraft.jzlib.InfCodes -> d:
    int[] inflate_mask -> a
    int mode -> b
    int len -> c
    int[] tree -> d
    int tree_index -> e
    int need -> f
    int lit -> g
    int get -> h
    int dist -> i
    byte lbits -> j
    byte dbits -> k
    int[] ltree -> l
    int ltree_index -> m
    int[] dtree -> n
    int dtree_index -> o
    void init$3f75552f(int,int,int[],int,int[],int) -> a
    int proc(com.jcraft.jzlib.InfBlocks,com.jcraft.jzlib.ZStream,int) -> a
com.jcraft.jzlib.InfTree -> e:
    int[] fixed_tl -> a
    int[] fixed_td -> b
    int[] cplens -> c
    int[] cplext -> d
    int[] cpdist -> e
    int[] cpdext -> f
    int[] hn -> g
    int[] v -> h
    int[] c -> i
    int[] r -> j
    int[] u -> k
    int[] x -> l
    int huft_build(int[],int,int,int,int[],int[],int[],int[],int[],int[],int[]) -> a
    int inflate_trees_bits(int[],int[],int[],int[],com.jcraft.jzlib.ZStream) -> a
    int inflate_trees_dynamic(int,int,int[],int[],int[],int[],int[],int[],com.jcraft.jzlib.ZStream) -> a
    int inflate_trees_fixed$25a2d8a2(int[],int[],int[][],int[][]) -> a
    void initWorkArea(int) -> a
com.jcraft.jzlib.Inflate -> f:
    int mode -> a
    int method -> b
    long[] was -> c
    long need -> d
    int nowrap -> e
    int wbits -> f
    com.jcraft.jzlib.InfBlocks blocks -> g
    int inflateInit(com.jcraft.jzlib.ZStream,int) -> a
    int inflate(com.jcraft.jzlib.ZStream,int) -> b
com.jcraft.jzlib.ZInputStream -> g:
    com.jcraft.jzlib.ZStream z -> a
    int bufsize -> b
    int flush -> c
    byte[] buf -> d
    byte[] buf1 -> e
    boolean compress -> f
    java.io.InputStream in -> g
    boolean nomoreinput -> h
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void close() -> close
com.jcraft.jzlib.ZStream -> h:
    byte[] next_in -> a
    int next_in_index -> b
    int avail_in -> c
    long total_in -> d
    byte[] next_out -> e
    int next_out_index -> f
    int avail_out -> g
    long total_out -> h
    java.lang.String msg -> i
    com.jcraft.jzlib.Inflate istate -> j
    long adler -> k
    com.jcraft.jzlib.Adler32 _adler -> l
com.jcraft.jzlib.ZStreamException -> i:
org.hisp.dhis.mobile.reporting.connection.BasicAuth -> j:
    byte[] cvtTable -> a
    java.lang.String encode(java.lang.String,java.lang.String) -> a
org.hisp.dhis.mobile.reporting.connection.ConnectionManager -> k:
    java.util.Vector abstractModelListVector -> a
    org.hisp.dhis.mobile.reporting.model.DataSet dataSet -> b
    org.hisp.dhis.mobile.reporting.model.Program program -> c
    org.hisp.dhis.mobile.reporting.model.ActivityPlan activityPlan -> d
    org.hisp.dhis.mobile.reporting.model.AbstractModelList abstractModelList -> e
    java.lang.String ua -> f
    java.lang.String locale -> g
    org.hisp.dhis.mobile.reporting.gui.DHISMIDlet dhisMIDlet -> h
    java.lang.String rootUrl -> i
    java.lang.String userName -> j
    java.lang.String password -> k
    java.lang.String task -> l
    int param -> m
    org.hisp.dhis.mobile.reporting.model.DataSetValue dataSetValue -> n
    org.hisp.dhis.mobile.reporting.model.ActivityValue activityValue -> o
    void configureConnection(javax.microedition.io.HttpConnection) -> a
    void run() -> run
    void downloadDataSet(java.lang.String) -> a
    void downloadProgram(java.lang.String) -> b
    void downloadActivityPlan(java.lang.String) -> c
    void downloadAbstractModelList(java.lang.String) -> d
    java.lang.String upload(java.lang.String,java.lang.String,byte[]) -> a
    java.io.DataInputStream getDecompressedStream(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.db.AbstractModelComparator -> l:
    int sortOrder -> a
    int compare(byte[],byte[]) -> compare
org.hisp.dhis.mobile.reporting.db.AbstractModelFilter -> m:
    org.hisp.dhis.mobile.reporting.model.AbstractModel model -> a
    boolean matches(byte[]) -> matches
org.hisp.dhis.mobile.reporting.db.ActivityRecordFilter -> n:
    java.lang.String filter -> a
    boolean matches(byte[]) -> matches
org.hisp.dhis.mobile.reporting.db.ActivityRecordStore -> o:
    java.lang.String dbName -> a
    java.util.Vector activityVector -> b
    org.hisp.dhis.mobile.reporting.gui.DHISMIDlet dhisMIDlet -> c
    void setActivityVector(java.util.Vector) -> a
    void save() -> a
    void clear() -> b
    void run() -> run
org.hisp.dhis.mobile.reporting.db.ModelRecordStore -> p:
    java.lang.String dbName -> a
    byte[] getRecord(int) -> a
    void AddRecord(byte[]) -> a
    java.util.Vector getAllRecord() -> a
    void deleteRecord(org.hisp.dhis.mobile.reporting.model.AbstractModel) -> a
    java.util.Vector generateWeeklyPeriods() -> b
    java.util.Vector generateMonthlyPeriods() -> c
    java.util.Vector generateYearlyPeriods() -> d
    java.lang.String formatDailyPeriod(java.util.Date) -> a
    java.lang.String formatMonthlyPeriod(java.lang.String) -> a
org.hisp.dhis.mobile.reporting.db.SettingsRecordStore -> q:
    java.lang.String dbName -> a
    java.util.Hashtable hashtable -> b
    java.lang.String get(java.lang.String) -> a
    void put(java.lang.String,java.lang.String) -> a
    void load() -> b
    void save() -> a
org.hisp.dhis.mobile.reporting.gui.CalendarCanvas -> org.hisp.dhis.mobile.reporting.gui.a:
    org.hisp.dhis.mobile.reporting.gui.CalendarWidget calendar -> a
    org.hisp.dhis.mobile.reporting.gui.DHISMIDlet dhisMIDlet -> b
    javax.microedition.lcdui.Command selectDateCmd -> c
    void keyPressed(int) -> keyPressed
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
org.hisp.dhis.mobile.reporting.gui.CalendarWidget -> org.hisp.dhis.mobile.reporting.gui.b:
    java.lang.String[] MONTH_LABELS -> a
    java.lang.String[] WEEKDAY_LABELS -> b
    int startWeekday -> c
    int padding -> d
    int borderWidth -> e
    int borderColor -> f
    javax.microedition.lcdui.Font weekdayFont -> g
    int weekdayBgColor -> h
    int weekdayColor -> i
    javax.microedition.lcdui.Font headerFont -> j
    int headerColor -> k
    javax.microedition.lcdui.Font font -> l
    int foreColor -> m
    int bgColor -> n
    int selectedBgColor -> o
    int selectedForeColor -> p
    int width -> q
    int height -> r
    int headerHeight -> s
    int weekHeight -> t
    int cellWidth -> u
    int cellHeight -> v
    long currentTimestamp -> w
    java.util.Calendar calendar -> x
    int weeks -> y
    java.util.Date getSelectedDate() -> a
    void setDate(java.util.Date) -> a
    void initialize() -> b
    void initHeight() -> c
    int getMonthDays() -> d
    int getStartWeekday() -> e
    void keyPressed(int) -> a
    void go(int) -> b
    void paint(javax.microedition.lcdui.Graphics) -> a
org.hisp.dhis.mobile.reporting.gui.DHISMIDlet -> org.hisp.dhis.mobile.reporting.gui.DHISMIDlet:
    boolean midletPaused -> a
    boolean login -> b
    java.util.Vector dataSetsVector -> c
    java.util.Vector programsVector -> d
    java.util.Vector activitiesVector -> e
    org.hisp.dhis.mobile.reporting.model.DataSet selectedDataSet -> f
    org.hisp.dhis.mobile.reporting.model.Activity selectedActivity -> g
    org.hisp.dhis.mobile.reporting.model.ProgramStage selectedProgramStage -> h
    java.util.Hashtable dataElements -> i
    java.lang.String selectedPeriod -> j
    javax.microedition.lcdui.DateField dailyPeriodDateField -> k
    javax.microedition.lcdui.TextField url -> l
    javax.microedition.lcdui.TextField dhisUserPass -> m
    javax.microedition.lcdui.TextField locale -> n
    javax.microedition.lcdui.TextField dhisUserName -> o
    javax.microedition.lcdui.TextField userName -> p
    javax.microedition.lcdui.TextField password -> q
    javax.microedition.lcdui.ChoiceGroup periodChoice -> r
    javax.microedition.lcdui.Alert successAlert -> s
    javax.microedition.lcdui.Alert errorAlert -> t
    javax.microedition.lcdui.Form activityEntryForm -> u
    javax.microedition.lcdui.Form dataEntryForm -> v
    javax.microedition.lcdui.Form loginForm -> w
    javax.microedition.lcdui.Form settingsForm -> x
    javax.microedition.lcdui.Form periodForm -> y
    javax.microedition.lcdui.Form waitForm -> z
    javax.microedition.lcdui.Form activityDetailForm -> A
    javax.microedition.lcdui.List activityPlanList -> B
    javax.microedition.lcdui.List dataSetDisplayList -> C
    javax.microedition.lcdui.List servicesList -> D
    javax.microedition.lcdui.List maintenanceList -> E
    javax.microedition.lcdui.List deleteList -> F
    javax.microedition.lcdui.List mainMenuList -> G
    javax.microedition.lcdui.List dsDnldList -> H
    javax.microedition.lcdui.List prDnldList -> I
    javax.microedition.lcdui.Command mnuListExtCmd -> J
    javax.microedition.lcdui.Command dsDnldListBakCmd -> K
    javax.microedition.lcdui.Command prDnldListBakCmd -> L
    javax.microedition.lcdui.Command actvPlnLstBakCmd -> M
    javax.microedition.lcdui.Command activityDetailCmd -> N
    javax.microedition.lcdui.Command activityDetailOkCmd -> O
    javax.microedition.lcdui.Command setngsBakCmd -> P
    javax.microedition.lcdui.Command setngsSaveCmd -> Q
    javax.microedition.lcdui.Command deFrmBakCmd -> R
    javax.microedition.lcdui.Command deFrmSndCmd -> S
    javax.microedition.lcdui.Command deFrmSavCmd -> T
    javax.microedition.lcdui.Command activityFrmBakCmd -> U
    javax.microedition.lcdui.Command activityFrmSndCmd -> V
    javax.microedition.lcdui.Command activityFrmSavCmd -> W
    javax.microedition.lcdui.Command lgnFrmExtCmd -> X
    javax.microedition.lcdui.Command lgnFrmLgnCmd -> Y
    javax.microedition.lcdui.Command dsLstBakCmd -> Z
    javax.microedition.lcdui.Command periodBakCmd -> aa
    javax.microedition.lcdui.Command mntnceBakCmd -> ab
    javax.microedition.lcdui.Command srvcsBakCmd -> ac
    javax.microedition.lcdui.Command deleteBakCmd -> ad
    javax.microedition.lcdui.Command periodNxtCmd -> ae
    javax.microedition.lcdui.Command dsDeleteCmd -> af
    javax.microedition.lcdui.Command selectDailyPeriodCmd -> ag
    javax.microedition.lcdui.Image logo -> ah
    void switchDisplayable(javax.microedition.lcdui.Alert,javax.microedition.lcdui.Displayable) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    javax.microedition.lcdui.List getMainMenuList() -> i
    javax.microedition.lcdui.List getPrDnldList() -> j
    javax.microedition.lcdui.List getDsDnldList() -> a
    javax.microedition.lcdui.TextField getUrl() -> k
    javax.microedition.lcdui.TextField getDhisUserPass() -> l
    javax.microedition.lcdui.Form getDataEntryForm() -> m
    javax.microedition.lcdui.Command getActivityDetailCmd() -> n
    javax.microedition.lcdui.TextField getUserName() -> o
    javax.microedition.lcdui.TextField getPassword() -> p
    javax.microedition.lcdui.Image getLogo() -> q
    javax.microedition.lcdui.Form getActivityDetailForm() -> r
    javax.microedition.lcdui.List getActivityPlanList() -> b
    javax.microedition.lcdui.List getDataSetDisplayList() -> c
    void dataSetDisplayListAction() -> s
    javax.microedition.lcdui.List getServicesList() -> t
    void displayActivity(org.hisp.dhis.mobile.reporting.model.Activity,org.hisp.dhis.mobile.reporting.model.ProgramStage,javax.microedition.lcdui.Form) -> a
    javax.microedition.lcdui.List getMaintenanceList() -> d
    javax.microedition.lcdui.TextField getDhisUserName() -> u
    javax.microedition.lcdui.TextField getLocale() -> v
    javax.microedition.lcdui.Form getPeriodForm() -> e
    javax.microedition.lcdui.ChoiceGroup getPeriodChoice() -> w
    javax.microedition.lcdui.Form getWaitForm() -> x
    javax.microedition.lcdui.Alert getSuccessAlert() -> f
    javax.microedition.lcdui.Alert getErrorAlert() -> g
    javax.microedition.lcdui.List getDeleteList() -> y
    javax.microedition.lcdui.Command getDsDeleteCmd() -> z
    void exitMIDlet() -> A
    void startApp() -> startApp
    void pauseApp() -> pauseApp
    void destroyApp(boolean) -> destroyApp
    void loadActivityPlan(java.util.Vector) -> a
    void loadDataSets(javax.microedition.lcdui.List) -> a
    void loadSettings() -> B
    void displayProgramsForDownload(java.util.Vector) -> b
    void displayDataSetsForDownload(java.util.Vector) -> c
    org.hisp.dhis.mobile.reporting.model.DataSet fetchDataSet(int) -> a
    void saveProgram(org.hisp.dhis.mobile.reporting.model.Program) -> a
    void displayDataEntry(org.hisp.dhis.mobile.reporting.model.DataSet,javax.microedition.lcdui.Form) -> a
    org.hisp.dhis.mobile.reporting.model.DataSetValue generateDataSetValue() -> C
    org.hisp.dhis.mobile.reporting.model.ActivityValue generateActivityValue() -> D
    javax.microedition.lcdui.DateField getDailyPeriodDateField() -> h
    javax.microedition.lcdui.Command getSelectDailyPeriodCmd() -> E
org.hisp.dhis.mobile.reporting.gui.SplashScreen -> org.hisp.dhis.mobile.reporting.gui.c:
    javax.microedition.lcdui.Display display -> a
    javax.microedition.lcdui.Displayable nextScreen -> b
    javax.microedition.lcdui.Image image -> c
    java.util.Timer timer -> d
    void keyPressed(int) -> keyPressed
    void paint(javax.microedition.lcdui.Graphics) -> paint
    void pointerPressed(int,int) -> pointerPressed
    void showNotify() -> showNotify
    void dismissSplashScreen() -> a
    void access$0(org.hisp.dhis.mobile.reporting.gui.SplashScreen) -> a
org.hisp.dhis.mobile.reporting.gui.SplashScreen$CountDown -> org.hisp.dhis.mobile.reporting.gui.d:
    org.hisp.dhis.mobile.reporting.gui.SplashScreen this$0 -> a
    void run() -> run
org.hisp.dhis.mobile.reporting.model.AbstractModel -> r:
    int id -> a
    java.lang.String name -> b
    int getId() -> a
    void setId(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    org.hisp.dhis.mobile.reporting.model.AbstractModel recordToAbstractModel(byte[]) -> a
    byte[] serialize() -> c
    void deSerialize(byte[]) -> b
org.hisp.dhis.mobile.reporting.model.AbstractModelList -> s:
    java.util.Vector abstractModels -> a
    java.util.Vector getAbstractModels() -> a
    void deSerialize(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.model.Activity -> t:
    org.hisp.dhis.mobile.reporting.model.Beneficiary beneficiary -> a
    org.hisp.dhis.mobile.reporting.model.Task task -> b
    java.util.Date dueDate -> c
    org.hisp.dhis.mobile.reporting.model.Beneficiary getBeneficiary() -> a
    void setBeneficiary(org.hisp.dhis.mobile.reporting.model.Beneficiary) -> a
    org.hisp.dhis.mobile.reporting.model.Task getTask() -> b
    void setTask(org.hisp.dhis.mobile.reporting.model.Task) -> a
    java.util.Date getDueDate() -> c
    void setDueDate(java.util.Date) -> a
    org.hisp.dhis.mobile.reporting.model.Activity recordToActivity(byte[]) -> a
    byte[] activityToRecord(org.hisp.dhis.mobile.reporting.model.Activity) -> a
org.hisp.dhis.mobile.reporting.model.ActivityPlan -> u:
    java.util.Vector activities -> a
    java.util.Vector getActivities() -> a
    void deSerialize(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.model.ActivityValue -> v:
    int programInstanceId -> a
    java.util.Vector dataValues -> b
    void setProgramInstanceId(int) -> a
    java.util.Vector getDataValues() -> a
    byte[] serialize() -> b
org.hisp.dhis.mobile.reporting.model.Beneficiary -> w:
    int id -> a
    java.lang.String firstName -> b
    java.lang.String middleName -> c
    java.lang.String lastName -> d
    java.lang.String getFullName() -> a
    int getId() -> b
    void setId(int) -> a
    java.lang.String getFirstName() -> c
    void setFirstName(java.lang.String) -> a
    java.lang.String getMiddleName() -> d
    void setMiddleName(java.lang.String) -> b
    java.lang.String getLastName() -> e
    void setLastName(java.lang.String) -> c
org.hisp.dhis.mobile.reporting.model.DataElement -> x:
    java.lang.String type -> a
    java.lang.String getType() -> d
    void setType(java.lang.String) -> b
    byte[] serialize() -> c
    void deSerialize(byte[]) -> b
org.hisp.dhis.mobile.reporting.model.DataSet -> y:
    java.util.Vector dataElements -> a
    java.lang.String periodType -> b
    java.lang.String getPeriodType() -> d
    java.util.Vector getDataElements() -> e
    byte[] serialize() -> c
    void deSerialize(byte[]) -> b
    void deSerialize(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.model.DataSetValue -> z:
    java.lang.String pName -> a
    java.util.Vector dataValues -> b
    java.lang.String getpName() -> d
    void setpName(java.lang.String) -> b
    java.util.Vector getDataValues() -> e
    byte[] serialize() -> c
    void deSerialize(byte[]) -> b
org.hisp.dhis.mobile.reporting.model.DataValue -> aa:
    int id -> a
    java.lang.String val -> b
    int getId() -> a
    void setId(int) -> a
    java.lang.String getVal() -> b
    void setVal(java.lang.String) -> a
org.hisp.dhis.mobile.reporting.model.Program -> ab:
    java.util.Vector programStages -> a
    java.util.Vector getProgramStages() -> d
    byte[] serialize() -> c
    void deSerialize(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.model.ProgramStage -> ac:
    java.util.Vector dataElements -> a
    java.util.Vector getDataElements() -> d
    byte[] serialize() -> c
    void deSerialize(byte[]) -> b
    void serialize(java.io.DataOutputStream) -> a
    void deSerialize(java.io.DataInputStream) -> a
org.hisp.dhis.mobile.reporting.model.Task -> ad:
    int progStageInstId -> a
    int progStageId -> b
    boolean complete -> c
    int getProgStageInstId() -> a
    void setProgStageInstId(int) -> a
    int getProgStageId() -> b
    void setProgStageId(int) -> b
    boolean isComplete() -> c
    void setComplete(boolean) -> a
